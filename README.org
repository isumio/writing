* scimaxで言うところのnotebookとは何ぞや？
M-x nb- で nb-hydra/body を選ぶと videoで見たメニューが出る。
ここで n: new notebook を選ぶと　~/vc/project/ となって新しいディレクトリ名
を求められる。
そのままだと、c:/users/isumi/appdata/roamiong/ のディレクトリになってしまうので、
d:/sumio/vc/project/writing に新しいディレクトリを作った、と思ったらその中に
.git も作られていた。初めっから magit を使うような設定になっているようだ。
YASnippetやorg-refも初めからセットされているので、これは慣れるまで大変かもネ。

* 2度目の訪問で README.org
これもディレクトリを開くときにあらかじめセットされていた。
否応なしに、まずreadme.orgを書くことになった。
そこで以下に説明文を引用する.....

* Projectileとは?
ざっくり言うと汎用的なプロジェクト管理をEmacsで行うための便利機能いっぱいなパッケージです。ちなみに、projectileという単語自体は手元の英和辞書を引いてみますと「砲弾・石などの発射物、あるいはロケットなどの自動推進体」とかあります。

公式ページのREADMEを見るとわかるように個別の機能の数は多いのですが、だいたいの所次のようにまとめられると思います。

** Gitや主要なプロジェクト管理ツールを自動認識
例えば手元のGitリポジトリ下のファイルを開いたとします。Projectileはその時点で自動的にルートディレクトリ等を認識し、そのプロジェクト内のファイルに絞った操作を行えるようになります。
そのプロジェクト内で最近開いたファイルを開くとか、プロジェクトのテストを再実行するとか。一度開いたプロジェクトのルートディレクトリは記憶してくれているので、プロジェクト単位での管理もしやすい感じです
** 対応するファイルを簡単に開ける
「Hoge.cに対してHoge.hを開きたい」というような場合や「Testコードと実装コードを行き来する」といった、あるファイルと実装上関連があるファイルを開く操作に対して強いです。
特段設定の必要なくプロジェクトごとに編集作業ができるので、Projectile単体で十分利用価値があるのですが、さらにHelmという拡張機能と組み合わせるとより使い勝手がまします。

.....引用終わり、...Helmが出てきたぞ。scimaxでも使われているぞ。以前、その複雑さを理解できずに放り出したままだったのに、ここで再会だ。

* Emacs Starter Kits
以前に Prelude というのを導入して使ってみたことがあったが、なかなか理解できなくて
放り出してしまった。
最近では org-roamというものに関連して、Spacemacs とか Doom Emacs などの人気が高いらしい。
なのに、なぜか私は scimax なんてものに手を出したのか、経緯をはっきり思い出せないでいる。
でもまぁ、projectileとかmajitとか、少し興味がわいてきたので、触ってみようと思っている。
